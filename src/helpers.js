const figlet = require('figlet');
const chalk = require('chalk');

exports.welcome = (appName) => {
    console.log(chalk.yellow(figlet.textSync(appName)));
};

exports.readme = (projectName) => {
    return `## ${projectName}`;
}

exports.gitignore = `
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/
`;

exports.app = `const express = require('express');
const bodyParser = require('body-parser');
    
const app = express();
    
app.use(express.static('public'));
    
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
    
app.use('/', (res, req) => {
    res.json({ name: process.env.npm_package_name });
});
    
module.exports = app;`;

exports.server = `require('./app').listen(process.env.PORT || 8000, () => console.log('Server is running..'));`;

exports.json = {
    "name": "",
    "version": "1.0.0",
    "description": "",
    "main": "server.js",
    "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1",
        "start": "node server.js"
    },
    "repository": {
        "type": "git",
        "url": ""
    },
    "author": "",
    "license": "ISC",
    "bugs": {
        "url": ""
    },
    "homepage": "",
    "dependencies": {
        "express": "^4.16.4",
        "body-parser": "^1.18.3"
    }
}